# this file is *not* meant to cover or endorse the use of GitHub Actions, but rather to
# help make automated releases for this project

name: Release

on:
  release:
    types: [created]

jobs:
  build-and-publish:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.10.11"
    - name: Install build dependencies
      run: python -m pip install -U setuptools wheel build
    - name: Build
      run: python -m build .
    - name: Publish
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_test_password }}
        skip_existing: true
  
  generate_and_upload_coverage:
    name: Generate and Upload Coverage Report
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update Pip
        run: pip install --upgrade pip
             pip install --use-pep517

      - name: Create and activate virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install build dependencies
        run: python -m pip install -U setuptools wheel build

      - name: Install dependencies
        run:  pip install -r requirements.txt

      - name: Run tests and generate coverage report
        run: |
          coverage run -m pytest
          coverage report -m > coverage.txt

      - name: Archive coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.Test_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.Test_AWS_SECRET_ACCESS_KEY }}
          aws-region: <your_aws_region>  # Replace with your actual AWS region

      - name: Upload coverage report to S3
        run: aws s3 cp coverage.txt s3://<your_bucket_name>/coverage.txt